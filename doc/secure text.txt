for app:
	w3af -- (Python, supports plugins)

for coding:

	code review based on security rule
	thread safe
	no memory leaks


	tools to plugin into IDE
	Sonar
	FindSecurityBugs
	LAPSE
	PMD -- source code analyzer (https://pmd.github.io/pmd-5.4.0/index.html)

	need to investigate to see which one is the best
	
	
	
0. 	Principal
	This document does not cover what specific tools are going to be used. 
	Instead, it covers some abstract methodoligies that we should follow during design and development.
	
1.	Source code analyser IDE/maven plug-in
	Benefit: 
	Find potential issue at the earliest stage
	Guarantee security from source code level
	Save vast amount of code review time
	Gig help for developers of all levels

	Target:
	Follow Java secure coding guidelines	
	Integrate into IDEs(Eclipse, ...)

	Cost:
	Open source projects for free
	Consider commercials if it's better?
	No extra development time	
	Build with projects by maven plug-in
	
	Candidates:
	OWASP LAPSE+
	Google CodePro Analytix
	Find Security Bugs
	OWASP Orizon Project(code review tool)

2. 	Stress testing done by developers
	Benefit:
	High performance
	High robustness
	Low maintenance cost
	
	Target:
	Thread safe
	No memory leaks
	Low resources(memory, CPU) comsuming
   
    Cost:
	Open source / commercial tools(likely)
	Self development(developers known more details)
	Code reviews(manual)
	
3. 	Authentication & Authorization & Audit
	Benefit:
	Guarantee runtime security
	Provide strictly access control
	Monitor, trace and analysis system users and resources
	
	Target:
	Running on application level
	Configurable
	Plug-able
	Implement with standard protocols
	
	Cost:
	Dedicated module/service development and maintenance
	Open source / commercial implementation
	